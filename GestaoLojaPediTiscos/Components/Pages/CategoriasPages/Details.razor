@page "/categorias/details"

@*@attribute [Authorize(Roles = "Admin, Funcionario")]*@

@using Microsoft.EntityFrameworkCore
@using GestaoLojaPediTiscos.Entities
@inject IDbContextFactory<GestaoLojaPediTiscos.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Detalhes</PageTitle>

<h1>Detalhes do registo!</h1>

<div>
    <h4>Categoria</h4>
    <hr />
    @if (categorias is null){
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">

            <dd>
                <div>
                    @if (categorias.Imagem is not null){
                        <img title="@categorias.Nome" id="imagePreview" class="img-thumbnail  mt-2" src="data:image/*;base64,@(Convert.ToBase64String(categorias.Imagem))" style="width:100px">
                    }
                    else{
                        <img id="imagePreview" class="img-thumbnail mt-2" src="img/noproductstrans.png" style="width:50%;">
                    }
                </div>
            </dd>

            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@categorias.Nome</dd>

            <dt class="col-sm-2">Ordem</dt>
            <dd class="col-sm-10">@categorias.Ordem</dd>

            <dt class="col-sm-2">Número de Subcategorias</dt>
            <dd class="col-sm-10">@numeroSubcategorias</dd>
        </dl>
        <div>
            <a href="@($"/categorias/edit?id={categorias.Id}")"><img title="Editar" src="/img/editicon.png" style="height:30px" /></a> |
            <a href="/categoria" type="button" class="btn btn-outline-secondary"><img title="Recuar" src="/img/backicon.png" style="height:30px" /></a>
        </div>
    }
</div>

@code {
    private Categorias? categorias;
    private int numeroSubcategorias;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync(){

        using var context = DbFactory.CreateDbContext();
        categorias = await context.Categorias.FirstOrDefaultAsync(m => m.Id == Id);

        if (categorias is null){
            NavigationManager.NavigateTo("/categorias");
            return;
        }

        // Conta o número de SubCategorias relacionadas a esta Categoria
        numeroSubcategorias = await context.SubCategorias.CountAsync(sc => sc.CategoriaId == categorias.Id);
    }
}
