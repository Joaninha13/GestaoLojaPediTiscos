@page "/subcategorias/details"

@attribute [Authorize(Roles = "Admin, Funcionario")]

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using GestaoLojaPediTiscos.Entities
@inject IDbContextFactory<GestaoLojaPediTiscos.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Detalhes</PageTitle>

<h1>Detalhes da SubCategoria!</h1>

<div>
    <hr />
    @if (subcategorias is null){
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">

            <dd>
                <div>
                    @if (subcategorias.Imagem is not null){
                        <img title="@subcategorias.UrlImagem" id="imagePreview" class="img-thumbnail  mt-2" src="data:image/*;base64,@(Convert.ToBase64String(subcategorias.Imagem))" style="width:100px">
                    }
                    else{
                        <img id="imagePreview" class="img-thumbnail mt-2" src="img/noproductstrans.png" style="width:50%;">
                    }
                </div>
            </dd>

            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@subcategorias.Nome</dd>

            <dt class="col-sm-2">Ordem</dt>
            <dd class="col-sm-10">@subcategorias.Ordem</dd>

            <dt class="col-sm-2">Categoria</dt>
            <dd class="col-sm-10">@subcategorias.Categoria.Nome</dd>

            <dt class="col-sm-2">Número de Produtos</dt>
            <dd class="col-sm-10">@numeroProdutos</dd>
        </dl>
        <div>
            <a href="@($"/subcategorias/edit?id={subcategorias.Id}")"><img title="Editar" src="/img/editicon.png" style="height:30px" /></a> |
            <a href="/subcategorias" type="button" class="btn btn-outline-secondary"><img title="Recuar" src="/img/backicon.png" style="height:30px" /></a>
        </div>


    }
</div>

@code {
    private SubCategorias? subcategorias;

    private int numeroProdutos;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        subcategorias = await context.SubCategorias.Include("Categoria").FirstOrDefaultAsync(m => m.Id == Id);

        if (subcategorias is null){
            NavigationManager.NavigateTo("/subcategorias");
            return;
        }

        // Conta o número de Produtos relacionadas a esta subCategoria
        numeroProdutos = await context.Produtos.CountAsync(m => m.SubCategoriaId == Id);
    }
}
